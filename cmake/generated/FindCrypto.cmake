# AUTOGENERATED, DON'T CHANGE THIS FILE!


if (TARGET Crypto)
  if (NOT Crypto_FIND_VERSION)
      set(Crypto_FOUND ON)
      return()
  endif()

  if (Crypto_VERSION)
      if (Crypto_FIND_VERSION VERSION_LESS_EQUAL Crypto_VERSION)
          set(Crypto_FOUND ON)
          return()
      else()
          message(FATAL_ERROR
              "Already using version ${Crypto_VERSION} "
              "of Crypto when version ${Crypto_FIND_VERSION} "
              "was requested."
          )
      endif()
  endif()
endif()

set(FULL_ERROR_MESSAGE "Could not find `Crypto` package.\n\tDebian: sudo apt update && sudo apt install libssl-dev\n\tMacOS: brew install openssl")


include(FindPackageHandleStandardArgs)





if (Crypto_VERSION)
  set(OpenSSL_VERSION ${Crypto_VERSION})
endif()

if (Crypto_FIND_VERSION AND NOT OpenSSL_VERSION)
if (UNIX AND NOT APPLE)
  find_program(DPKG_QUERY_BIN dpkg-query)
  if (DPKG_QUERY_BIN)
    execute_process(
      COMMAND dpkg-query --showformat=\${Version} --show libssl-dev
      OUTPUT_VARIABLE OpenSSL_version_output
      ERROR_VARIABLE OpenSSL_version_error
      RESULT_VARIABLE OpenSSL_version_result
      OUTPUT_STRIP_TRAILING_WHITESPACE
    )
    if (OpenSSL_version_result EQUAL 0)
      set(OpenSSL_VERSION ${OpenSSL_version_output})
      message(STATUS "Installed version libssl-dev: ${OpenSSL_VERSION}")
    endif(OpenSSL_version_result EQUAL 0)
  endif(DPKG_QUERY_BIN)
endif(UNIX AND NOT APPLE)
 
if (APPLE)
  find_program(BREW_BIN brew)
  if (BREW_BIN)
    execute_process(
      COMMAND brew list --versions openssl
      OUTPUT_VARIABLE OpenSSL_version_output
      ERROR_VARIABLE OpenSSL_version_error
      RESULT_VARIABLE OpenSSL_version_result
      OUTPUT_STRIP_TRAILING_WHITESPACE
    )
    if (OpenSSL_version_result EQUAL 0)
      if (OpenSSL_version_output MATCHES "^(.*) (.*)$")
        set(OpenSSL_VERSION ${CMAKE_MATCH_2})
        message(STATUS "Installed version openssl: ${OpenSSL_VERSION}")
      else()
        set(OpenSSL_VERSION "NOT_FOUND")
      endif()
    else()
      message(WARNING "Failed execute brew: ${OpenSSL_version_error}")
    endif()
  endif()
endif()
 
endif (Crypto_FIND_VERSION AND NOT OpenSSL_VERSION)

find_package(OpenSSL 
    COMPONENTS Crypto
 )
set(Crypto_FOUND ${OpenSSL_FOUND})
 

if (NOT Crypto_FOUND)
  if (Crypto_FIND_REQUIRED)
      message(FATAL_ERROR "${FULL_ERROR_MESSAGE}. Required version is at least ${Crypto_FIND_VERSION}")
  endif()

  return()
endif()

if (Crypto_FIND_VERSION)
  if (OpenSSL_VERSION VERSION_LESS Crypto_FIND_VERSION)
      message(STATUS
          "Version of Crypto is '${OpenSSL_VERSION}'. "
          "Required version is at least '${Crypto_FIND_VERSION}'. "
          "Ignoring found Crypto."
      )
      set(Crypto_FOUND OFF)
      return()
  endif()
endif()

 
if (NOT TARGET Crypto)
  add_library(Crypto INTERFACE IMPORTED GLOBAL)

  if (TARGET OpenSSL::Crypto)
    target_link_libraries(Crypto INTERFACE OpenSSL::Crypto)
  endif()
  
  # Target Crypto is created
endif()

if (OpenSSL_VERSION)
  set(Crypto_VERSION "${OpenSSL_VERSION}" CACHE STRING "Version of the Crypto")
endif()
