# AUTOGENERATED, DON'T CHANGE THIS FILE!

if (gregorian_FOUND)
  return()
endif()

if (TARGET gregorian)
  set(gregorian_FOUND ON)
  return()
endif()


set(FULL_ERROR_MESSAGE "Could not find `gregorian` package.\n\tDebian: sudo apt update && sudo apt install libboost-date-time-dev\n\tMacOS: brew install boost")
if (gregorian_FIND_VERSION)
    set(FULL_ERROR_MESSAGE "${FULL_ERROR_MESSAGE}\nRequired version is at least ${gregorian_FIND_VERSION}")
endif()


include(FindPackageHandleStandardArgs)

find_library(gregorian_LIBRARIES_boost_date_time
  NAMES boost_date_time
)
list(APPEND gregorian_LIBRARIES ${gregorian_LIBRARIES_boost_date_time})

find_path(gregorian_INCLUDE_DIRS_boost_date_time_gregorian_gregorian_hpp
  NAMES boost/date_time/gregorian/gregorian.hpp
)
list(APPEND gregorian_INCLUDE_DIRS ${gregorian_INCLUDE_DIRS_boost_date_time_gregorian_gregorian_hpp})



if (gregorian_FIND_VERSION)
if (UNIX AND NOT APPLE)
  find_program(DPKG_QUERY_BIN dpkg-query)
  if (DPKG_QUERY_BIN)
    execute_process(
      COMMAND dpkg-query --showformat=\${Version} --show libboost-date-time-dev
      OUTPUT_VARIABLE gregorian_version_output
      ERROR_VARIABLE gregorian_version_error
      RESULT_VARIABLE gregorian_version_result
      OUTPUT_STRIP_TRAILING_WHITESPACE
    )
    if (gregorian_version_result EQUAL 0)
      set(gregorian_VERSION ${gregorian_version_output})
      message(STATUS "Installed version libboost-date-time-dev: ${gregorian_VERSION}")
    endif(gregorian_version_result EQUAL 0)
  endif(DPKG_QUERY_BIN)
endif(UNIX AND NOT APPLE)
 
if (APPLE)
  find_program(BREW_BIN brew)
  if (BREW_BIN)
    execute_process(
      COMMAND brew list --versions boost
      OUTPUT_VARIABLE gregorian_version_output
      ERROR_VARIABLE gregorian_version_error
      RESULT_VARIABLE gregorian_version_result
      OUTPUT_STRIP_TRAILING_WHITESPACE
    )
    if (gregorian_version_result EQUAL 0)
      if (gregorian_version_output MATCHES "^(.*) (.*)$")
        set(gregorian_VERSION ${CMAKE_MATCH_2})
        message(STATUS "Installed version boost: ${gregorian_VERSION}")
      else()
        set(gregorian_VERSION "NOT_FOUND")
      endif()
    else()
      message(WARNING "Failed execute brew: ${gregorian_version_error}")
    endif()
  endif()
endif()
 
endif (gregorian_FIND_VERSION)

 
find_package_handle_standard_args(
  gregorian
    REQUIRED_VARS
      gregorian_LIBRARIES
      gregorian_INCLUDE_DIRS
      
    FAIL_MESSAGE
      "${FULL_ERROR_MESSAGE}"
)
mark_as_advanced(
  gregorian_LIBRARIES
  gregorian_INCLUDE_DIRS
  
)


if (gregorian_FIND_VERSION)
  if (gregorian_VERSION VERSION_LESS gregorian_FIND_VERSION)
      message(STATUS
          "Version of gregorian is ${gregorian_VERSION}. "
          "Required version is ${gregorian_FIND_VERSION}. Ignoring found gregorian."
      )
      set(gregorian_FOUND OFF)
  endif()
endif()

if (NOT gregorian_FOUND)
  if (gregorian_FIND_REQUIRED)
      message(FATAL_ERROR "${FULL_ERROR_MESSAGE}")
  endif()

  return()
endif()

 
if (NOT TARGET gregorian)
  add_library(gregorian INTERFACE IMPORTED GLOBAL)

  if (TARGET Boost::gregorian)
    target_link_libraries(gregorian INTERFACE Boost::gregorian)
  endif()
  target_include_directories(gregorian INTERFACE ${gregorian_INCLUDE_DIRS})
  target_link_libraries(gregorian INTERFACE ${gregorian_LIBRARIES})
  
  # Target gregorian is created
endif()
