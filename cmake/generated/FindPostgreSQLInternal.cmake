# AUTOGENERATED, DON'T CHANGE THIS FILE!


if (TARGET PostgreSQLInternal)
  if (NOT PostgreSQLInternal_FIND_VERSION)
      set(PostgreSQLInternal_FOUND ON)
      return()
  endif()

  if (PostgreSQLInternal_VERSION)
      if (PostgreSQLInternal_FIND_VERSION VERSION_LESS_EQUAL PostgreSQLInternal_VERSION)
          set(PostgreSQLInternal_FOUND ON)
          return()
      else()
          message(FATAL_ERROR
              "Already using version ${PostgreSQLInternal_VERSION} "
              "of PostgreSQLInternal when version ${PostgreSQLInternal_FIND_VERSION} "
              "was requested."
          )
      endif()
  endif()
endif()

set(FULL_ERROR_MESSAGE "Could not find `PostgreSQLInternal` package.\n\tDebian: sudo apt update && sudo apt install libpq-dev postgresql-12 postgresql-server-dev-12\n\tMacOS: brew install postgres")


include(FindPackageHandleStandardArgs)

find_library(PostgreSQLInternal_LIBRARIES_libpq_a
  NAMES libpq.a
)
list(APPEND PostgreSQLInternal_LIBRARIES ${PostgreSQLInternal_LIBRARIES_libpq_a})
find_library(PostgreSQLInternal_LIBRARIES_libpgcommon_a
  NAMES libpgcommon.a
  PATHS /usr/lib/postgresql/12/lib /usr/lib/postgresql/13/lib /usr/lib/postgresql/14/lib
)
list(APPEND PostgreSQLInternal_LIBRARIES ${PostgreSQLInternal_LIBRARIES_libpgcommon_a})
find_library(PostgreSQLInternal_LIBRARIES_libpgport_a
  NAMES libpgport.a
  PATHS /usr/lib/postgresql/12/lib /usr/lib/postgresql/13/lib /usr/lib/postgresql/14/lib
)
list(APPEND PostgreSQLInternal_LIBRARIES ${PostgreSQLInternal_LIBRARIES_libpgport_a})

find_path(PostgreSQLInternal_INCLUDE_DIRS_postgres_fe_h
  NAMES postgres_fe.h
  PATH_SUFFIXES postgresql/internal
)
list(APPEND PostgreSQLInternal_INCLUDE_DIRS ${PostgreSQLInternal_INCLUDE_DIRS_postgres_fe_h})



if (PostgreSQLInternal_VERSION)
  set(PostgreSQLInternal_VERSION ${PostgreSQLInternal_VERSION})
endif()

if (PostgreSQLInternal_FIND_VERSION AND NOT PostgreSQLInternal_VERSION)
if (UNIX AND NOT APPLE)
  find_program(DPKG_QUERY_BIN dpkg-query)
  if (DPKG_QUERY_BIN)
    execute_process(
      COMMAND dpkg-query --showformat=\${Version} --show libpq-dev
      OUTPUT_VARIABLE PostgreSQLInternal_version_output
      ERROR_VARIABLE PostgreSQLInternal_version_error
      RESULT_VARIABLE PostgreSQLInternal_version_result
      OUTPUT_STRIP_TRAILING_WHITESPACE
    )
    if (PostgreSQLInternal_version_result EQUAL 0)
      set(PostgreSQLInternal_VERSION ${PostgreSQLInternal_version_output})
      message(STATUS "Installed version libpq-dev: ${PostgreSQLInternal_VERSION}")
    endif(PostgreSQLInternal_version_result EQUAL 0)
  endif(DPKG_QUERY_BIN)
endif(UNIX AND NOT APPLE)
 
if (APPLE)
  find_program(BREW_BIN brew)
  if (BREW_BIN)
    execute_process(
      COMMAND brew list --versions postgres
      OUTPUT_VARIABLE PostgreSQLInternal_version_output
      ERROR_VARIABLE PostgreSQLInternal_version_error
      RESULT_VARIABLE PostgreSQLInternal_version_result
      OUTPUT_STRIP_TRAILING_WHITESPACE
    )
    if (PostgreSQLInternal_version_result EQUAL 0)
      if (PostgreSQLInternal_version_output MATCHES "^(.*) (.*)$")
        set(PostgreSQLInternal_VERSION ${CMAKE_MATCH_2})
        message(STATUS "Installed version postgres: ${PostgreSQLInternal_VERSION}")
      else()
        set(PostgreSQLInternal_VERSION "NOT_FOUND")
      endif()
    else()
      message(WARNING "Failed execute brew: ${PostgreSQLInternal_version_error}")
    endif()
  endif()
endif()
 
endif (PostgreSQLInternal_FIND_VERSION AND NOT PostgreSQLInternal_VERSION)

 
find_package_handle_standard_args(
  PostgreSQLInternal
    REQUIRED_VARS
      PostgreSQLInternal_LIBRARIES
      PostgreSQLInternal_INCLUDE_DIRS
      
    FAIL_MESSAGE
      "${FULL_ERROR_MESSAGE}"
)
mark_as_advanced(
  PostgreSQLInternal_LIBRARIES
  PostgreSQLInternal_INCLUDE_DIRS
  
)

if (NOT PostgreSQLInternal_FOUND)
  if (PostgreSQLInternal_FIND_REQUIRED)
      message(FATAL_ERROR "${FULL_ERROR_MESSAGE}. Required version is at least ${PostgreSQLInternal_FIND_VERSION}")
  endif()

  return()
endif()

if (PostgreSQLInternal_FIND_VERSION)
  if (PostgreSQLInternal_VERSION VERSION_LESS PostgreSQLInternal_FIND_VERSION)
      message(STATUS
          "Version of PostgreSQLInternal is '${PostgreSQLInternal_VERSION}'. "
          "Required version is at least '${PostgreSQLInternal_FIND_VERSION}'. "
          "Ignoring found PostgreSQLInternal."
      )
      set(PostgreSQLInternal_FOUND OFF)
      return()
  endif()
endif()

 
if (NOT TARGET PostgreSQLInternal)
  add_library(PostgreSQLInternal INTERFACE IMPORTED GLOBAL)

  target_include_directories(PostgreSQLInternal INTERFACE ${PostgreSQLInternal_INCLUDE_DIRS})
  target_link_libraries(PostgreSQLInternal INTERFACE ${PostgreSQLInternal_LIBRARIES})
  
  # Target PostgreSQLInternal is created
endif()

if (PostgreSQLInternal_VERSION)
  set(PostgreSQLInternal_VERSION "${PostgreSQLInternal_VERSION}" CACHE STRING "Version of the PostgreSQLInternal")
endif()
