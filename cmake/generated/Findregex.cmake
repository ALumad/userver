# AUTOGENERATED, DON'T CHANGE THIS FILE!

 
              
 
 

include(FindPackageHandleStandardArgs)

find_library(regex_LIBRARIES_boost_regex NAMES
  boost_regex
  )
list(APPEND regex_LIBRARIES
  ${regex_LIBRARIES_boost_regex}
)
  
find_path(regex_INCLUDE_DIRS_boost_regex_config_hpp NAMES
  boost/regex/config.hpp
  )
list(APPEND regex_INCLUDE_DIRS
  ${regex_INCLUDE_DIRS_boost_regex_config_hpp}
)
  
 

 
 
find_package_handle_standard_args(
  regex
    REQUIRED_VARS
      regex_LIBRARIES
      regex_INCLUDE_DIRS
      
    FAIL_MESSAGE
      "Could not find `regex` package. Debian: sudo apt update && sudo apt install libboost-regex-dev MacOS: brew install boost"
)
mark_as_advanced(
  regex_LIBRARIES
  regex_INCLUDE_DIRS
  
)
 
if(NOT Boost_FOUND)
  message(FATAL_ERROR "Could not find `regex` package. Debian: sudo apt update && sudo apt install libboost-regex-dev MacOS: brew install boost")
elseif(regex_version_result)
  if(regex_version_result EQUAL 0)
    if(regex_VERSION VERSION_LESS None)
      message(FATAL_ERROR "Found but version is regex_VERSION. Could not find `regex` package. Debian: sudo apt update && sudo apt install libboost-regex-dev MacOS: brew install boost")
    endif()
  else()
    message(WARNING "Can not determine version. ${regex_version_error}")
  endif()
endif()

 
if (NOT TARGET regex)
  add_library(regex INTERFACE IMPORTED GLOBAL)
  if (TARGET Boost::regex)
    target_link_libraries(regex INTERFACE Boost::regex)
  endif(TARGET Boost::regex)
   target_include_directories(regex INTERFACE ${regex_INCLUDE_DIRS})
   target_link_libraries(regex INTERFACE ${regex_LIBRARIES})
  endif(NOT TARGET regex)
