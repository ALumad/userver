# AUTOGENERATED, DON'T CHANGE THIS FILE!

if (Git_FOUND)
  return()
endif()

if (TARGET Git)
  set(Git_FOUND ON)
  return()
endif()


set(FULL_ERROR_MESSAGE "Could not find `Git` package.")
if (Git_FIND_VERSION)
    set(FULL_ERROR_MESSAGE "${FULL_ERROR_MESSAGE}\nRequired version is at least ${Git_FIND_VERSION}")
endif()


include(FindPackageHandleStandardArgs)



find_program(Git_EXECUTABLE_git_eg
  NAMES git eg
  PATH_SUFFIXES Git/cmd Git/bin
)
list(APPEND Git_EXECUTABLE ${Git_EXECUTABLE_git_eg})


if (Git_FIND_VERSION)
 
 
endif (Git_FIND_VERSION)

 
find_package_handle_standard_args(
  Git
    REQUIRED_VARS
      
      
      Git_EXECUTABLE
    FAIL_MESSAGE
      "${FULL_ERROR_MESSAGE}"
)
mark_as_advanced(
  
  
  Git_EXECUTABLE
)


if (Git_FIND_VERSION)
  if (Git_VERSION VERSION_LESS Git_FIND_VERSION)
      message(STATUS
          "Version of Git is ${Git_VERSION}. "
          "Required version is ${Git_FIND_VERSION}. Ignoring found Git."
      )
      set(Git_FOUND OFF)
  endif()
endif()

if (NOT Git_FOUND)
  if (Git_FIND_REQUIRED)
      message(FATAL_ERROR "${FULL_ERROR_MESSAGE}")
  endif()

  return()
endif()

 
